.arms.pc-col
  .pc-row.weapons
    .header.right-header
      h1(data-i18n='weapons') Weapons
      .right-tri
    .header.right-header
      .header.htab
        .triangle
        input.tab-switch(name='attr_weapon_type_toggle' type='radio' value='range' checked)
        h1(data-i18n='ranged') Ranged
        .right-tri
      .header.htab
        .triangle
        input.tab-switch(name='attr_weapon_type_toggle' type='radio' value='melee')
        h1(data-i18n='melee') Melee
        .right-tri
    .border-box
      .pc-box.medium-box
        input.tab-switch(name='attr_weapon_type_toggle' type='hidden' value='range')
        .rows.repeating-container.weapon-range
          - const rangeRepeatingSection = '@{repeating_range_${x}';
          +h2Headers(pcRangeWeaponObject)
          fieldset(class='repeating_range')
            input(name='attr_dicepool' type='hidden' value='0')
            input.flag-primary(name='attr_primary' type='hidden' value='')
            +weaponRollButton(pcRangeWeaponButton)
            each val in ['Dam', 'Acc', 'AP', 'Mode', 'RC', 'Ammo']
              - const attrName = val === 'Dam' ? 'damage' : val === 'RC' ? 'recoil' : val.toLowerCase();
              if val === 'Mode'
                select(name='attr_mode' title='@{mode}' value='BF')
                  each val in weaponModes
                    option(data-i18n=val.toLowerCase() value=val) #{val}
              else
                span.text-center(name=`attr_${attrName}`)
            +repeatingSectionFlags()
            .collapse
              h3(data-i18n='modifications')
              span(name='attr_modifications')
              h3(data-i18n='notes')
              span(name='attr_notes')
            .settings
              each val, key in pcRangeWeaponObject
                - const attrName = key === 'Dam' ? 'damage' : key.toLowerCase();
                if key === 'Mode'
                  select(name='attr_mode' title='@{mode}' value='BF')
                    each val in weaponModes
                      option(data-i18n=val.toLowerCase() value=val) #{val}
                else
                  label(data-i18n-title=key.toLowerCase() title=key.toLowerCase())
                    input(name=`attr_${attrName}` placeholder=val['placeholder'] title=`${rangeRepeatingSection}_${attrName}}` type=val['type'] value='')
              .row
                h3(data-i18n='modeoptions') Mode Options
                label(data-i18n-title='modeoptions' title='Mode Options')
                  input(name='attr_mode_options' placeholder='SA/BF/FA' type='text' title=`${rangeRepeatingSection}_mode_options}}`)
                h3(data-i18n='range') range
                label(data-i18n-title='range' title='Range')
                  input(name='attr_range' placeholder='25/150/350/550' type='text' title='')
                h3(data-i18n='primary') primary
                label(data-i18n-title='primary' title='Primary')
                  input(name='attr_primary' type='checkbox' title=`${rangeRepeatingSection}_primary}`  value='primary')

              .row
                h3(data-i18n='skill') skill
                select(name=`attr_skill` title=`${rangeRepeatingSection}_skill}` value='@{firearms}')
                  optgroup(label='Combat Skills' ) Combat Skills
                    option(data-i18n='firearmsgroup' value='@{firearms}' selected) Firearms Group
                    option(data-i18n='automatics' value='@{automatics}') Automatics
                    option(data-i18n='archery' value='@{archery}') Archery
                    option(data-i18n='exoticrange' value='0') Exotic Range
                    option(data-i18n='heavyweapons' value='@{heavyweapons}') Heavy Weapons
                    option(data-i18n='longarms' value='@{longarms}') Longarms
                    option(data-i18n='pistols' value='@{pistols}') Pistols
                    option(data-i18n='throwingweapons' value='@{throwingweapons}') Throwing Weapons
                  optgroup(label='Vehicle Skills') Vehicle Skills
                    option(data-i18n='gunnery' value='@{gunnery}') Gunnery
                h3(data-i18n='specialization') specialization
                label(data-i18n-title='specialization' title='specialization')
                  input(name='attr_specialization' value='2' title=`${rangeRepeatingSection}_specialization}` type='checkbox')
                h3(data-i18n='modifier') modifier
                label(data-i18n-title='modifier' title='modifier')
                  input(name='attr_dicepool_modifier' title=`${rangeRepeatingSection}_dicepool_modifier}` type='number' value='0')
                input(name=`attr_skill` type='hidden' value='')
                .exotic-warning
                  i(data-i18n='exoticnote') Exotic weapons are not linked to a skill. Use Modifier input to set dicepool.
              .row.modifications
                h3(data-i18n='modifications')
                label(data-i18n-title='modifications' title='modifications')
                  input.text-left(name=`attr_modifications` placeholder='Chemical Protect' title=`@{repeating_armor_`+'${x}'+`_modifications}` type='text' value='')
              +repeatingSectionNotes('range')
        .rows.repeating-container.weapon-melee
          - const meleeRepeatingSection = '@{repeating_melee_${x}';
          +h2Headers(pcMeleeWeaponObject)
          fieldset(class='repeating_melee')
            input(name='attr_dicepool' type='hidden' value='0')
            input.flag-primary(name='attr_primary' type='hidden' value='')
            +weaponRollButton(pcMeleeWeaponButton)
            each val in ['Dam', 'Acc', 'AP', 'Reach']
              - const attrName = val === 'Dam' ? 'damage' : val.toLowerCase();
              span.text-center(name=`attr_${attrName}`)
            +repeatingSectionFlags()
            .collapse
              h3(data-i18n='modifications')
              span(name='attr_modifications')
              h3(data-i18n='notes')
              span(name='attr_notes')
            .settings
              each val, key in pcMeleeWeaponObject
                - const attrName = key === 'Dam' ? 'damage' : key.toLowerCase();
                label(data-i18n-title=key.toLowerCase() title=key.toLowerCase())
                    input(name=`attr_${attrName}` placeholder=val['placeholder'] title=`${meleeRepeatingSection}_${attrName}}` type=val['type'] value='')
              h3(data-i18n='primary') primary
              label(data-i18n-title='primary' title='Primary')
                input(name='attr_primary' type='checkbox' title=`${meleeRepeatingSection}_primary}`  value='primary')
              .row
                h3(data-i18n='skill') skill
                select(name=`attr_skill` title=`${meleeRepeatingSection}_skill}` value='@{closecombat}')
                  optgroup(label='Combat Skills' ) Combat Skills
                    option(data-i18n='closecombatgroup' value='@{closecombat}' selected) Close Combat Group
                    option(data-i18n='blades' value='@{blades}') Blades
                    option(data-i18n='clubs' value='@{clubs}') Clubs
                    option(data-i18n='exoticmelee' value='0') Blades
                    option(data-i18n='unarmedcombat' value='@{unarmedcombat}') Unarmed Combat
                  optgroup(label='Vehicle Skills') Vehicle Skills
                    option(data-i18n='gunnery' value='@{gunnery}') Gunnery
                h3(data-i18n='specialization') specialization
                label(data-i18n-title='specialization' title='specialization')
                  input(name='attr_specialization' value='2' title=`${meleeRepeatingSection}_specialization}` type='checkbox')
                h3(data-i18n='modifier') modifier
                label(data-i18n-title='modifier' title='modifier')
                  input(name='attr_dicepool_modifier' title=`${meleeRepeatingSection}_dicepool_modifier}` type='number')
                input(name=`attr_skill` type='hidden' value='')
                .exotic-warning
                  i(data-i18n='exoticnote') Exotic weapons are not linked to a skill. Use Modifier input to set dicepool.
              .row.modifications
                h3(data-i18n='modifications')
                label(data-i18n-title='modifications' title='modifications')
                  input.text-left(name=`attr_modifications` placeholder='Chemical Protect' title=`@{repeating_armor_`+'${x}'+`_modifications}` type='text' value='')
              +repeatingSectionNotes('melee')
  .pc-row.armor
    .header.right-header
      h1(data-i18n='armor') Armor
      .right-tri
    .border-box
      .pc-box.medium-box
        .rows.repeating-container
          - const armorRepeatingSection = '@{repeating_armor_${x}';
          .row-long.headers
            each val in ['Armor', 'Rating', 'Acid', 'Cold', 'Elec', 'Fire', 'Radi']
              h2(data-i18n=`${val.toLowerCase()}`) #{val}
          fieldset(class='repeating_armor')
            input.flag-primary(name='attr_primary' type='hidden' value='')
            button(name=`roll_soak` type='roll' value!=noWoundsRollBegining+'{{header=^{soak}}}{{base=^{body} â™¦ ^{armor}}}{{dice=[[((@{body}+@{rating}+@{dicepool_modifier})'+noWoundsRollEnding)
              span(name='attr_name')
            button(name=`roll_armor` type='roll' value!=noWoundsRollBegining+'{{header=@{name}}}{{base= ^{armor}}}{{dice=[[((@{rating})'+noWoundsRollEnding)
              span.text-center(name='attr_rating')
            each val in ['Acid', 'Cold', 'Electrical', 'Fire', 'Radiation']
              - const attrName = val.toLowerCase();
              button(name=`roll_${attrName}` type='roll' value!=noWoundsRollBegining+`{{header=^{${attrName}protection}}}{{base= ^{armor}}}{{dice=[[((@{body}+@{rating}+@{dicepool_modifier}+@{${attrName}_modifier})`+noWoundsRollEnding)
                span.text-center(name=`attr_${attrName}_modifier`)
            +repeatingSectionFlags()
            .collapse
              h3(data-i18n='modifications')
              span(name='attr_modifications')
              h3(data-i18n='notes')
              span(name='attr_notes')
            .settings
              each val, key in pcArmorObject
                - const attrName = key === 'Name' || key === 'Rating' ? key.toLowerCase() : `${key.toLowerCase()}_modifier`;
                label(data-i18n-title=key.toLowerCase() title=key.toLowerCase())
                  input(name=`attr_${attrName}` placeholder=val['placeholder'] title=`@{${armorRepeatingSection}_${attrName}}` type=val['type'] value='')
              .row
                h3(data-i18n='primary') primary
                label(data-i18n-title='primary' title='Primary')
                  input(name='attr_primary' type='checkbox' title=`@{${armorRepeatingSection}_primary}`  value='primary')
                h3(data-i18n='modifier') modifier
                label(data-i18n-title='modifier' title='modifier')
                  input(name='attr_dicepool_modifier' placeholder='0' title=`@{${armorRepeatingSection}_dicepool_modifier}` type='number' value='0')
              h3(data-i18n='modifications')
              label(data-i18n-title='modifications' title='modifications')
                input.text-left(name=`attr_modifications` placeholder='Chemical Protect' title=`@{repeating_armor_`+'${x}'+`_modifications}` type='text' value='')
              +repeatingSectionNotes('armor')
